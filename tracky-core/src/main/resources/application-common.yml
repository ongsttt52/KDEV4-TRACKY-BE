spring:
  config:
    import: optional:classpath:.env[.properties]

  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Seoul&rewriteBatchedStatements=true
    # &profileSQL=true&logger=Slf4JLogger&maxQuerySizeToLog=999999
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      pool-name: ConsumerHikariCP
      maximum-pool-size: 5
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 600000
      leak-detection-threshold: 10000

  jpa:
    hibernate:
      ddl-auto: none
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate.globally_quoted_identifiers: true
      hibernate.format_sql: true
      hibernate.jdbc.time_zone: Asia/Seoul
    defer-datasource-initialization: true

  sql:
    init:
      mode: never
      encoding: UTF-8
      schema-locations: classpath:schema.sql
      data-locations: classpath:data.sql

management:
  endpoints:
    web:
      exposure:
        include:
          - "*"
  endpoint:
    prometheus:
      enabled: true
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
        rabbitmq.consumed: true  # RabbitMQ 소비 메트릭에 대한 히스토그램 활성화
    tags:
      application: ${spring.application.name}
    enable:
      jvm: true
      process: true
      system: true
      hikaricp: true
      http: true
      tomcat: true
      rabbitmq: true  # RabbitMQ 메트릭 활성화

logging:
  level:
    # RabbitMQ ConnectionFactory INFO 로그 끄기
    org.springframework.amqp.rabbit.connection.CachingConnectionFactory: OFF
    # RabbitMQ Listener INFO 로그 끄기
    org.springframework.amqp.rabbit.listener: OFF
    #    org.hibernate.SQL: DEBUG
#    com.mysql.cj.jdbc: TRACE  # MySQL JDBC 드라이버 로깅
