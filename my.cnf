[mysqld]
# --- 기본 설정 ---
# 서버의 고유 ID (도커 컨테이너가 여러 개일 경우 각기 다르게 설정)
server-id = 1

# 문자열 인코딩을 UTF-8mb4로 설정 (이모지 등 지원)
character-set-server = utf8mb4
collation-server = utf8mb4_unicode_ci

# 에러 로그 파일 경로 (컨테이너 내부 경로)
log_error = /var/log/mysql/error.log

# 느린 쿼리 로그 활성화 (성능 저하 쿼리 분석용)
slow_query_log = 1
long_query_time = 0.001
log_queries_not_using_indexes = 1
log_output = FILE
slow_query_log_file = /var/log/mysql/mysql-slow.log

# --- 네트워크 및 연결 설정 ---
# MySQL 포트 (기본값 3306)
port = 3306
# 모든 IP 주소에서 접속 허용 (보안에 주의, 테스트 환경에서는 괜찮음)
bind-address = 0.0.0.0

# 최대 동시 접속 수
max_connections = 200 # HikariCP 풀 사이즈 50개 고려하여 충분히 여유롭게 설정

# --- InnoDB 엔진 설정 (가장 중요!) ---
# InnoDB 버퍼 풀 크기 (총 컨테이너 메모리 8GB 중 6GB 할당)
# 이 값이 데이터와 인덱스를 캐싱하는 데 사용됩니다.
# (8GB의 75% 수준)
innodb_buffer_pool_size = 6G

# 트랜잭션 커밋 시 Redo Log를 디스크에 플러시하는 방식
# 1: 트랜잭션 커밋 시마다 동기화 (ACID 강제, I/O 부담 높음 - 현재 프로젝트의 time_distance 문제점)
# 2: 1초에 한 번 동기화 (성능 좋음, 서버 다운 시 1초 내 데이터 손실 가능성)
# 0: MySQL 종료 시에만 동기화 (성능 최고, 전원 장애 시 데이터 손실 가능성 높음)
# 테스트 환경이므로 일단 2로 설정하여 I/O 부담을 줄여볼 수 있으나,
# time_distance 제거 효과를 명확히 보려면 1로 시작하고 이후에 2로 변경하며 비교하는 것이 좋습니다.
innodb_flush_log_at_trx_commit = 1 # (초기 테스트는 1로 시작 권장)

# Redo Log 파일 크기 (너무 작으면 빈번한 체크포인트, 너무 크면 복구 시간 증가)
# 일반적으로 버퍼 풀의 25%~100% 사이로 설정
innodb_log_file_size = 512M # 각 파일 크기, 합계는 2개 (1G)

# Redo Log 그룹 파일 수 (일반적으로 2개)
innodb_log_files_in_group = 2

# 동시 트랜잭션 스레드 수 (CPU 코어 수에 따라 조정, 0은 무제한)
innodb_thread_concurrency = 0 # 0은 MySQL이 알아서 관리

# 배치 INSERT/UPDATE 시 성능 향상을 위한 JDBC 옵션 (쿼리 최적화)
# 이는 애플리케이션의 JDBC 드라이버 설정이므로 my.cnf에 직접적인 설정은 아님.
# (애플리케이션 코드에 rewriteBatchedStatements=true 설정 확인)

# --- 기타 버퍼 설정 ---
# 정렬 작업에 사용되는 버퍼
sort_buffer_size = 2M # 기본값보다 약간 높게

# 조인 작업에 사용되는 버퍼
join_buffer_size = 2M # 기본값보다 약간 높게

# MyISAM 엔진 관련 설정 (InnoDB 사용 시 큰 영향 없음, 하지만 존재할 수 있음)
# key_buffer_size = 64M

[mysql]
# MySQL 클라이언트 설정
# prompt = "MySQL [\d] > "

[mysqldump]
# mysqldump 유틸리티 설정
# max_allowed_packet = 16M